---
import Section from "../Section.astro"
import { work } from "@cv"
import ArrowDown from "../../icons/arrow-down.astro"

console.log({
  work,
})

---

<Section title="Experiencia laboral">
  <ul>
    {
      work.map(
        ({ name, startDate, endDate, position, summary, highlights, url }) => {
          const startYear = new Date(startDate).getFullYear()
          const endYear =
            endDate != null ? new Date(endDate).getFullYear() : "Actual"
          const years = `${startYear} - ${endYear}`

          return (
              <li>
                <div class="bullet"></div>
                <article>
                  <header class="collapsible">
                    <div>
                      <h3>
                        <a href={url} title={`Ver ${name}`} target="_blank">
                          {name}
                        </a>
                      </h3>
                      <h4>{position}</h4>
                    </div>
                    <div class="right">
                      <h3><time>{years}</time></h3>
                      <div class="button"><ArrowDown /></div>
                    </div>
                  </header>
                  <footer class="content collapsed">
                    <p>{summary}</p>
                  </footer>
                </article>
              </li>
          )
        }
      )
    }
  </ul>
</Section>

<style>
  ul {
    display: flex;
    flex-direction: column;
    margin-left: 0.5rem;
  }

  li {
    padding: 0 0 0.5rem 1rem;
    border-left: 2px solid var(--block-quote-border);
    position: relative;
    display: flex;
  }

  .bullet {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    border: solid 4px var(--block-quote-border);
    position: absolute;
    top: 0.7rem;
    left: -5px;
  }

  article {
    width: 100%;
    transition: all 0.3s ease-in-out;
  }

  article h3 {
    font-size: 1.2rem;
    font-weight: 500;
    color: var(--bold-text);
  }

  article a {
    color: var(--nav-text);
  }

  article a:hover {
    text-decoration: underline;
  }

  article h4 {
    color: var(--bold-text);
    font-weight: 400;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 4px;
    cursor: pointer;
  }

  time {
    color: var(--block-quote-border);
    font-size: 0.85rem;
    min-width: 102px;
    text-wrap: nowrap;
    margin-left: 0.5rem;
  }

  .right {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: 1rem;
  }

  .button {
    color: var(--bold-text);
    background-color: none;
    border: none;
    cursor: pointer;
    transition: transform 0.2s ease-in-out;
  }

  .button.active {
    transform: rotate(180deg);
  }

  .content {
    transition: all 0.3s ease-in-out;
  }

  /* Style the collapsible content. Note: hidden by default */
  .collapsed {
    height: 0;
    overflow: hidden;
  }

  @media (width <= 700px) {
    time {
      text-align: right;
    }
  }
</style>

<script>
  let coll = document.getElementsByClassName("collapsible");
  let i;

  for (i = 0; i < coll.length; i++) {
    coll[i].addEventListener("click", function(this: HTMLButtonElement) {
      let content = this.nextElementSibling;
      content?.classList.toggle("collapsed");
      if (
        content?.classList.contains("collapsed") ||
        content?.clientHeight === 0
      ) {
        content?.classList.add("collapsed");
        this.querySelector(".button")?.classList.remove("active");
      } else {
        content?.classList.remove("collapsed");
        this.querySelector(".button")?.classList.add("active");
      }
    });
  }
  
</script>