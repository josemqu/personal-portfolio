---
import Mail from "@/icons/Mail.astro";
import Phone from "@/icons/Phone.astro";
import X from "@/icons/X.astro";
import LinkedIn from "@/icons/LinkedIn.astro";
import GitHub from "@/icons/GitHub.astro";
import ArrowDown from "@/icons/arrow-down.astro";
import Download from "@/icons/Download.astro";
// import ThemeToggle from "@/components/ThemeToggle.astro";
// import LanguageToggle from "@/components/LanguageToggle.astro";
import { Player } from "@/components/Player.jsx";
import { ThemeSwitch } from "../ThemeSwitch.jsx";
// import { Language } from "@/components/Language.jsx";
// import { Switch } from "free-astro-components";

import type { SocialIcon } from "@/types/types.d.ts";

interface Props {
  language: string;
  name: string;
  label: string;
  email: string;
  phone: string;
  location: {
    city: string;
    region: string;
  };
  profiles: {
    network: string;
    url: string;
    username: string;
  }[];
}

const { language, name, email, phone, profiles, label } = Astro.props;

const SOCIAL_ICONS: SocialIcon = {
  GitHub,
  LinkedIn,
  X,
};

const firstName = name?.split(" ")[0];
const middleName = name?.split(" ")[1];
const lastName = name?.split(" ")[2];

const linkedInfo = profiles?.find(({ network }) => network === "LinkedIn");
const linkedUrl = linkedInfo?.url;

const printInfo = [email, phone, linkedUrl].filter(Boolean).join(" • ");
---

<div class="info">
  <h1 class="name">
    <span class="first-name">
      {firstName}
    </span>
    <span class="middle-name">
      {middleName}
    </span>
    <span class="last-name">
      {lastName}
    </span>
  </h1>
  <p class="desc">{label}</p>
  <footer class="print">
    {printInfo}
  </footer>
  <div class="icons-inline">
    <footer class="no-print">
      {
        email && (
          <a
            href={`mailto:${email}`}
            title={`Enviar un correo electrónico a ${name} al correo ${email}`}
            target="_blank"
            rel="noopener noreferrer"
          >
            <Mail />
          </a>
        )
      }
      {
        phone && (
          <a
            href={`tel:${phone}`}
            title={`Llamar por teléfono a ${name} al número ${phone}`}
            target="_blank"
            rel="noopener noreferrer"
          >
            <Phone />
          </a>
        )
      }
      {
        profiles?.map(({ network, url, username }) => {
          const Icon = SOCIAL_ICONS[network];

          return (
            <a
              href={url}
              title={`Visitar el perfil de ${name} en ${network}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <Icon />
            </a>
          );
        })
      }
      {/* Botón de descarga de CV */}
      <a
        href={language === "es"
          ? "/assets/CV_QUINTANA_es_2506.pdf"
          : "/assets/CV_QUINTANA_en_2505.pdf"}
        download
        title={language === "es"
          ? "Descargar CV en español"
          : "Download CV in English"}
        target="_blank"
        rel="noopener noreferrer"
        style="display: inline-flex; align-items: center; justify-content: center; border: 2px solid var(--block-quote-border); padding: 4px; height: 32px; width: 32px; border-radius: 6px; cursor: pointer; font-weight: 600; font-family: 'Roboto', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; font-size: 1rem;"
      >
        <Download />
      </a>
      <div class="icon" title="AI generated (NotebookLM)" id="play-pause">
        <Player client:load />
      </div>
      <div title="Change language" id="change-language">
        <a href={language === "es" ? `/en` : `/`} data-language-toggle>
          {language === "es" ? "EN" : "ES"}
        </a>
      </div>
    </footer>
    <ThemeSwitch client:load />
  </div>
</div>

<script></script>

<style>
  .info {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 100%;
    max-width: var(--profile-img-max-width);
  }

  .icons-inline {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    width: 100%;
  }

  h1 {
    font-size: 2rem;
    color: var(--bold-text);
    font-weight: 500;
    width: 100%;
    transition: all 0.1s ease-out;
  }

  footer {
    color: var(--color-text);
    font-size: 0.85rem;
    display: flex;
    align-items: center;
    gap: 4px;
  }

  footer a,
  footer .icon {
    color: var(--bold-text);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 2px solid var(--block-quote-border);
    padding: 4px;
    height: 32px;
    width: 32px;
    border-radius: 6px;
    cursor: pointer;
    font-weight: 600;
    font-family: "Roboto", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    font-size: 1rem;
  }

  footer a:hover,
  footer .icon:hover {
    background: var(--slider-bg);
    border-color: var(--hover-border-color);
    transform: scale(1.1);
    transition: transform 0.2s ease-out;
  }

  @media (width <= 700px) {
    .hidden {
      height: 0;
      /* overflow : hidden; */
      display: none;
    }

    .collapse {
      display: flex;
      flex-direction: row;
      justify-content: space-evenly;
      align-items: center;
    }

    .collapse h1 {
      text-align: left;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }

    h1.text-sm {
      font-size: 1.5rem;
    }

    .collapse .first-name,
    .collapse .middle-name {
      /* font-size: 1.2rem; */
      /* color: var(--color-text); */
    }

    .collapse .icons-inline {
      justify-content: flex-end;
    }

    .icons-inline {
      justify-content: space-between;
    }

    .info {
      justify-content: center;
      align-items: center;
      padding-right: 0;
      gap: 0.5rem;
      text-align: center;
    }
  }

  @media (width < 425px) {
    .container {
      padding-bottom: 0 !important;
    }

    .collapse h1 {
      line-height: 1.2em;
      height: 3em;
      overflow: hidden;
      white-space: wrap;
      /* text-overflow: ellipsis; */
    }

    .collapse .first-name,
    .collapse .middle-name {
      font-size: 1.2rem;
      /* color: var(--color-text); */
    }
  }

  @media (width < 335px) {
    .collapse .middle-name {
      display: none;
    }
  }
</style>

<!-- <script>
  function playPause() {
    const audio = document.getElementById("audio");
    if (audio.paused) {
      audio.play();
    } else {
      audio.pause();
    }
  }
</script> -->
