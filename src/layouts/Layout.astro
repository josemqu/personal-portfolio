---
import { basics } from "@cv";
import { ViewTransitions } from "astro:transitions";
import "../styles/global.css";
// Removed unused transition imports

interface Props {
  title: string;
}

const { title } = Astro.props;
const { image, summary, url } = basics;
---

<!doctype html>
  <html
    lang="es"
    data-theme="dark"
  >
  <head>
    <script>
      (function () {
        try {
          var stored = localStorage.getItem("theme");
          var prefersDark = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
          var theme = stored || (prefersDark ? "dark" : "light");
          var el = document.documentElement;
          if (el.getAttribute("data-theme") !== theme) {
            el.setAttribute("data-theme", theme);
          }
          // Hint the UA to use the right built-in form/control colors to avoid flashes
          el.style.colorScheme = theme === "dark" ? "dark" : "light";
        } catch (e) {
          // no-op
        }
      })();
    </script>
    <meta charset="UTF-8" />
    <meta name="color-scheme" content="dark light" />
    <meta name="theme-color" media="(prefers-color-scheme: dark)" content="#141924" />
    <meta name="theme-color" media="(prefers-color-scheme: light)" content="#f0f0f0" />
    <title>{title}</title>
    <meta name="description" content={summary.toString()} />
    <meta name="viewport" content="width=device-width" />
<!-- -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preload" as="image" href={image} />

    <meta property="og:url" content={url} />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={summary.toString()} />
    <meta property="og:image" content="" />

    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content={url.split("//")[1] ?? ""} />
    <meta property="twitter:url" content={url} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={summary.toString()} />
    <meta name="twitter:image" content="" />
    <meta property="og:image" content="https://jmquintana.vercel.app/me.webp" />
    <ViewTransitions />
  </head>
  <body>
    <slot />
    <style is:global>
      :root {
        --color-bg: #f0f0f0;
        --color-bg2: #fff;
        --color-text: #777;
        --bold-text: #222;
        --nav-text: #000000;
        --code: #f2f2f2;
        --block-quote-border: #999;
        --block-quote-border-small: #ddd;
        --hover-border-color: #727272;
        --block-quote-text: #222;
        --slider-bg: #dddddd;
        --pills-bg: #ddd;
        --pills-text: #222;
        --slider-bg-before: #fff;
        --slider-input-bg: #58b4ff;
        --running-bg: #090;
        --color-shadow: #555;
        --color-box-shadow: rgba(100, 100, 100, 0.1);
        --color-header-header: #f0f0f0;
      }

      [data-theme="light"] {
        --color-bg: #f0f0f0;
        --color-bg2: #fff;
        --color-text: #777;
        --bold-text: #222;
        --nav-text: #000000;
        --code: #f2f2f2;
        --block-quote-border: #999;
        --block-quote-border-small: #ddd;
        --hover-border-color: #727272;
        --block-quote-text: #222;
        --slider-bg: #ddd;
        --pills-bg: #ddd;
        --pills-text: #222;
        --slider-bg-before: #fff;
        --slider-input-bg: #58b4ff;
        --running-bg: #090;
        --color-shadow: #555;
        --color-box-shadow: rgba(100, 100, 100, 0.1);
        --color-header-header: #fff;
      }

      [data-theme="dark"] {
        --color-bg: #141924;
        --color-bg2: #1d2433;
        --color-text: #888;
        --bold-text: #eeeeee;
        --nav-text: #dddddd;
        --code: #f2f2f2;
        --block-quote-border: #58b4ff;
        --block-quote-border-small: #888;
        --hover-border-color: #80d0ff;
        --block-quote-text: #dddddd;
        --slider-input-bg: #58b4ff;
        --running-bg: #090;
        --slider-bg: #333;
        --pills-bg: #58b4ff;
        --pills-text: #222;
        --color-shadow: #eee;
        --color-box-shadow: rgba(0, 0, 0, 0.25);
        --color-header-header: #1d2433;
      }

      html {
        font-family:
          Menlo,
          Monaco,
          Lucida Console,
          "Courier New",
          Courier,
          monospace;
        background: var(--color-bg);
        letter-spacing: -0.025rem;
        scrollbar-width: none;
      }

      body {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        width: 100%;
      }

      body,
      figure {
        margin: 0;
        padding: 0;
      }

      html > body > header {
        position: sticky;
        top: 0;
        z-index: 9999 !important;
        isolation: isolate; /* ensure independent stacking context */
        background-color: var(--color-bg);
        background: linear-gradient(
          0deg,
          var(--color-bg) 0%,
          var(--color-bg2) 100%
        );
        padding: 0 1rem;
      }

      /* Prevent header and its children from participating in View Transitions */
      header,
      header * {
        view-transition-name: none;
        transition: none !important;
      }

      html > body > header.show-shadow {
        box-shadow: 0 10px 10px var(--color-box-shadow);
      }

      a {
        text-decoration: none;
      }

      ul {
        list-style: none;
        margin: 0;
        padding: 0;
      }

      *,
      *::before,
      *::after {
        box-sizing: border-box;
      }

      h1,
      h2,
      h3,
      h4 {
        margin: 0;
        font-family:
          system-ui,
          -apple-system,
          BlinkMacSystemFont,
          "Segoe UI",
          Roboto,
          Oxygen,
          Ubuntu,
          Cantarell,
          "Open Sans",
          "Helvetica Neue",
          sans-serif;
      }

      img {
        object-fit: cover;
        width: 148px;
        border-radius: 16px;
      }

      p {
        color: var(--color-text);
        font-size: 0.85rem;
        line-height: 1.5;
        margin: 0;
        text-wrap: pretty;
      }

      .print {
        display: none !important;
      }

      @media print {
        main {
          margin: 0;
          padding: 0;
        }

        h1,
        h2,
        h3,
        h4 {
          color: var(--bold-text);
        }

        .no-print {
          display: none !important;
        }

        .print {
          display: block !important;
        }

        astro-dev-toolbar {
          display: none !important;
        }

        article {
          break-inside: avoid;
        }
      }

      @media (width <= 700px) {
        html > body > header {
          top: -11rem;
        }
      }
    </style>
    <script>
      let scrollListener: (() => void) | null = null;

      const LANGUAGE_SCROLL_KEY = "scrollBeforeLanguageSwitch";

      function mobileCheck() {
        let check = false;
        (function (a) {
          if (
            /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(
              a
            ) ||
            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(
              a.substr(0, 4)
            )
          )
            check = true;
        })(navigator.userAgent || navigator.vendor);
        return check;
      }

      function applyHeaderShadowForCurrentScroll() {
        const header = document.querySelector("header");
        const isMobile = mobileCheck();
        const heigthTreshold = isMobile
          ? 200
          : window.innerWidth < 700
            ? 180
            : 20;
        const y = window.scrollY;
        if (y >= heigthTreshold) {
          header?.classList.add("show-shadow");
        } else {
          header?.classList.remove("show-shadow");
        }
      }

      function setupLanguageToggleScrollPreservation() {
        // Save scroll before navigating via language toggle
        document.addEventListener("click", (e) => {
          const target = e.target as HTMLElement | null;
          const link = target?.closest?.(
            "a[data-language-toggle]"
          ) as HTMLAnchorElement | null;
          if (link) {
            try {
              sessionStorage.setItem(
                LANGUAGE_SCROLL_KEY,
                String(window.scrollY)
              );
            } catch {}
          }
        });

        // Restore scroll if coming from a language toggle navigation
        const saved = sessionStorage.getItem(LANGUAGE_SCROLL_KEY);
        if (saved) {
          requestAnimationFrame(() => {
            window.scrollTo({ top: Number(saved), left: 0, behavior: "auto" });
            applyHeaderShadowForCurrentScroll();
            try {
              sessionStorage.removeItem(LANGUAGE_SCROLL_KEY);
            } catch {}
          });
        } else {
          // Ensure correct shadow on initial load too
          requestAnimationFrame(() => applyHeaderShadowForCurrentScroll());
        }
      }

      function initializeScrollEffects() {
        // Remove existing scroll listener if it exists
        if (scrollListener) {
          window.removeEventListener("scroll", scrollListener);
        }

        const desc = document.querySelector(".desc");
        const name = document.querySelector("h1.name");
        const info = document.querySelector(".info");
        let prevY = window.scrollY;

        scrollListener = () => {
          const actY = window.scrollY;
          if (prevY > actY && actY < 260) {
            name?.classList.remove("text-sm");
          } else if (prevY < actY && actY > 350) {
            name?.classList.add("text-sm");
          }

          applyHeaderShadowForCurrentScroll();
          prevY = window.scrollY;
        };

        window.addEventListener("scroll", scrollListener, { passive: true });
      }

      // Initialize on page load
      initializeScrollEffects();
      setupLanguageToggleScrollPreservation();

      // Re-initialize after view transitions
      document.addEventListener("astro:page-load", () => {
        initializeScrollEffects();
        setupLanguageToggleScrollPreservation();
      });
    </script>
  </body>
</html>
